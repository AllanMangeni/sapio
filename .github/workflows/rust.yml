# Based on https://github.com/rust-bitcoin/bitcoin_hashes/blob/master/.github/workflows/rust.yml
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
name: Continuous integration
jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  bench_nightly:
    name: Nightly - ASan + Bench
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout Crate 
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rust-src
      - name: Running address sanitizer
        env:
          DO_ASAN: true
        run: ./contrib/test.sh
      - name: Running benchmarks
        env:
          DO_BENCH: true
        run: ./contrib/test.sh

  wasm: 
    name: Nightly - Docs / WebAssembly Build + Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: wasm32-unknown-unknown
          override: true
      - name: Building docs
        env:
          DO_DOCS: true
        run: ./contrib/test.sh
      - name: Running WASM build
        env:
          DO_SAPIO_WASM: true
        run: ./contrib/test.sh

  Tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.75.0
          - beta
          - stable
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Pin cc if rust 1.75.0
        if: matrix.rust == '1.75.0'
        run: cargo generate-lockfile
      - name: Running cargo
        env:
          DO_FEATURE_MATRIX: true
        run: ./contrib/test.sh

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
